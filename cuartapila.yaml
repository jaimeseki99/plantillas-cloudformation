AWSTemplateFormatVersion: "2010-09-09"
Description: "Plantilla para crear una instancia EC2 sin parámetros"

Parameters:
  ImageId:
    Type: String
    Default: "ami-0c02fb55956c7d316"
    Description: "ID de la imagen AMI para la instancia EC2"
    AllowedValues:
      - "ami-0c02fb55956c7d316"  # Amazon Linux 2
      - "ami-0d8f6eb4f641ef691"  # Ubuntu Server 20.04 LTS
      - "ami-0a91cd140a1fc148a"  # Red Hat Enterprise Linux 8
    ConstraintDescription: "Debe ser una de las AMIs permitidas: Amazon Linux 2, Ubuntu Server 20.04 LTS o Red Hat Enterprise Linux 8."

Resources:

  VPC:
    Type: "AWS::EC2::VPC"
    Properties:
      CidrBlock: "13.0.0.0/20"
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: "Name"
          Value: "Serrano-Jaime-VPC"

  InternetGateway:
    Type: "AWS::EC2::InternetGateway"
    Properties: 
      Tags:
        - Key: "Name"
          Value: "IGW-JSQ"

  InternetGatewatAttachment:
    Type: "AWS::EC2::VPCGatewayAttachment"
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC

  PublicSubnet:
    Type: "AWS::EC2::Subnet"
    Properties:
      VpcId: !Ref VPC
      CidrBlock: "13.0.0.0/24"
      MapPublicIpOnLaunch: true
      AvailabilityZone: !Select [ 0, !GetAZs ] #Puedes poner la zona de disponibilidad así o ponerla a piñón (us-east-1a, 1b...)
      Tags:
        - Key: "Name"
          Value: "Subred-publica-JSQ"

  RouteTable:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: "Name"
          Value: "Tabla-Enrutamiento-JSQ"
  
  RouteToInternet:
    Type: "AWS::EC2::Route"
    Properties:
      DestinationCidrBlock: "0.0.0.0/0"
      GatewayId: !Ref InternetGateway
      RouteTableId: !Ref RouteTable

  SubnetRouteTableAssociation:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      RouteTableId: !Ref RouteTable
      SubnetId: !Ref PublicSubnet

  MySecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: "Permitir acceso SSH"
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: "tcp"
          FromPort: 22
          ToPort: 22
          CidrIp: "0.0.0.0/0"  
        - IpProtocol: "tcp"
          FromPort: 80
          ToPort: 80
          CidrIp: "0.0.0.0/0"  

  EC2Instance:
    Type: "AWS::EC2::Instance"
    Properties:
      InstanceType: "t2.micro"
      KeyName: "vockey"
      ImageId: !Ref ImageId  
      SecurityGroupIds: 
        - !Ref MySecurityGroup
      SubnetId: !Ref PublicSubnet
      PrivateIpAddress: "13.0.0.88"
      Tags:
        - Key: "Name"
          Value: "MiMaquinitaJSQ"
  
 

  